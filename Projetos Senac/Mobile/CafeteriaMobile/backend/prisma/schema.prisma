// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id String @id @default(uuid())

  login String
  senha String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("usuario")
}

model Categorias {
  id   String @id @default(uuid())
  nome String

  Produtos Produtos[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("categoria")
}

model Setores {
  id   String @id @default(uuid())
  nome String

  Funcionarios Funcionarios[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("setor")
}

model Produtos {
  id String @id @default(uuid())

  nome       String
  desc       String
  banner     String
  fabricante String
  preco      Decimal @db.Decimal(9, 2)
  quant      Int     @default(0)
  status     Boolean @default(true)

  categoria   Categorias @relation(fields: [categoriaId], references: [id])
  categoriaId String

  create_at    DateTime?      @default(now())
  update_at    DateTime?      @default(now())
  item_pedidos item_pedidos[]

  @@map("produto")
}

model Funcionarios {
  id    String @id @default(uuid())
  nome  String
  senha String
  cpf   String @unique

  setor   Setores @relation(fields: [setorId], references: [id])
  setorId String

  Pedidos Pedidos[]

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("funcionario")
}

model Pedidos {
  id            String   @id @default(uuid())
  mesa          String
  observacao    String?
  draft         Boolean  @default(true)
  ped_val_total Decimal? @db.Decimal(9, 2)

  funcionario   Funcionarios @relation(fields: [funcionarioId], references: [id])
  funcionarioId String

  create_at    DateTime?      @default(now())
  update_at    DateTime?      @default(now())
  item_pedidos item_pedidos[]

  @@map("pedido")
}

model item_pedidos {
  id        String @id @default(uuid())
  quant     String
  val_total String

  produto   Produtos @relation(fields: [produtoId], references: [id])
  produtoId String

  pedidos  Pedidos @relation(fields: [pedidoId], references: [id])
  pedidoId String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())
}
