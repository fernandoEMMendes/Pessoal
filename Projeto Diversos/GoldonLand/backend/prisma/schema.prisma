// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(uuid())

  nickname String
  email    String
  password String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())
  Inv       Inv[]

  @@map("users")
}

model Adms {
  id String @id @default(uuid())

  entry    String
  password String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("adms")
}

model Categories {
  id String @id @default(uuid())

  name String

  create_at DateTime?  @default(now())
  update_at DateTime?  @default(now())
  Catalogy  Catalogy[]

  @@map("categories")
}

model Catalogy {
  id String @id @default(uuid())

  name      String
  desc      String
  str       Int     @default(0)
  def       Int     @default(0)
  acc       Int     @default(0)
  acc_crit  Int     @default(0)
  mult_crit Decimal @db.Decimal(9, 2)

  category   Categories @relation(fields: [categoryId], references: [id])
  categoryId String

  create_at   DateTime?     @default(now())
  update_at   DateTime?     @default(now())
  Inv         Inv[]
  dropEnemies dropEnemies[]

  @@map("catalogo")
}

model Inv {
  id String @id @default(uuid())

  equip Boolean @default(false)
  quant Int     @default(1)

  catalogy   Catalogy @relation(fields: [catalogyId], references: [id])
  catalogyId String

  user   Users  @relation(fields: [userId], references: [id])
  userId String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("invGeral")
}

model Enemies {
  id String @id @default(uuid())

  name String
  desc String
  hp   Int    @default(1)
  str  Int    @default(0)
  acc  Int    @default(0)

  create_at   DateTime?     @default(now())
  update_at   DateTime?     @default(now())
  dropEnemies dropEnemies[]

  @@map("inimigos")
}

model dropEnemies {
  id String @id @default(uuid())

  quant Int @default(1)

  enemy   Enemies @relation(fields: [enemyId], references: [id])
  enemyId String

  catalogy   Catalogy @relation(fields: [catalogyId], references: [id])
  catalogyId String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("dropInimigos")
}
